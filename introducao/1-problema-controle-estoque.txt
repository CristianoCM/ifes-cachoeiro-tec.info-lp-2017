
Desenvolver um programa de computador para cadastro de estoque, aquisições e vendas de produtos em uma empresa.

Produto
 atributos:
  - código
  - nome
  - preço
  
  --> Foi implementado:
    - Classe: entidades.Produto
    - Classe: armazenamento.ArmazenamentoProduto
    - Classe: fronteiras.CadastroProduto
  --> Acrescentar chamada ao método exibirMenu da classe CadastroProduto ao método processarOpcaoUsuario da classe MenuPrincipal
  --> Acrescentar chamada ao método iniciarLista da classe ArmazenamentoProduto ao método main da classe ControleEstoque

Fornecedor
 atributos:
  - código
  - nome-fantasia
  - razão social
  - endereço
  - CNPJ 			11223562000200		11.223.562/0002-00
  - inscrição estadual
  - telefone
  - email

  --> Implementar:
    - Classe: entidades.Fornecedor (já pronta)
    - Classe: armazenamento.ArmazenamentoFornecedor
    - Classe: fronteiras.CadastroFornecedor
  --> Acrescentar chamada ao método exibirMenu da classe CadastroFornecedor ao método processarOpcaoUsuario da classe MenuPrincipal
  --> Acrescentar chamada ao método iniciarLista da classe ArmazenamentoFornecedor ao método main da classe ControleEstoque
  
Cliente
 atributos:
  - código
  - endereço
  - telefone
  - email
  
Cliente-Pessoa-Física (especialização de Cliente)
 atributos:
  - CPF
  - sexo
  - nome
  - data de nascimento

Cliente-Pessoa-Jurídica (especialização de Cliente)
 atributos:
  - CNPJ
  - inscrição estadual
  - nome-fantasia
  - razão social

  --> Implementar:
    - Classe: entidades.Cliente, entidades.ClientePessoaFisica,
    entidades.ClientePessoaJuridica (já prontas)
    - Classe: armazenamento.ArmazenamentoCliente (pronta)
    - Classe: fronteiras.CadastroCliente
  --> Acrescentar chamada ao método exibirMenu da classe CadastroCliente ao método processarOpcaoUsuario da classe MenuPrincipal
  --> Acrescentar chamada ao método iniciarLista da classe ArmazenamentoCliente ao método main da classe ControleEstoque
  
Funcionário
 atributos:
  - código
  - nome
  - CPF
  - endereço
  - telefone
  - email

Vendedor (especialização de Funcionário)
  
Comprador (especialização de Funcionário)

  --> Implementar:
    - Classe: entidades.Funcionario, entidades.Comprador,
    entidades.Vendedor (já prontas)
    - Classe: armazenamento.ArmazenamentoFuncionario
    - Classe: fronteiras.CadastroFuncionario
  --> Acrescentar chamada ao método exibirMenu da classe CadastroFuncionario ao método processarOpcaoUsuario da classe MenuPrincipal
  --> Acrescentar chamada ao método iniciarLista da classe ArmazenamentoFuncionario ao método main da classe ControleEstoque
  


Compra
 atributos:
  - código
  - data
  - valor-total
  - comprador
  - fornecedor
  
Item-Compra
 atributos:
  - código
  - compra
  - produto
  - preço-de-compra
  - quantidade

Venda
 atributos:
  - código
  - data
  - valor-total
  - vendedor
  - cliente

Item-Venda
 atributos:
  - código
  - venda
  - produto
  - preço-de-venda
  - quantidade
